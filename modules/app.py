# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from modules.plot_widget import MplWidget

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1100, 600)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: rgb(233, 196, 106);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")

        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setContentsMargins(10, 10, 20, 5)
        self.verticalLayout.setSpacing(10)
        self.verticalLayout.setObjectName("verticalLayout")

        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setStyleSheet("background-color: rgb(38, 70, 83);\n"
"border-color: rgb(0, 0, 0);\n"
"color: rgb(231, 111, 81);")
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout.addWidget(self.textBrowser)

        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setVerticalSpacing(10)
        self.formLayout.setObjectName("formLayout")

        self.label_start_point= QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.label_start_point.setFont(font)
        self.label_start_point.setObjectName("label_start_point")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_start_point)

        self.start_point = QtWidgets.QLineEdit(self.centralwidget)
        self.start_point.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.start_point.setObjectName("start_point")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.start_point)

        self.label_d0 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.label_d0.setFont(font)
        self.label_d0.setObjectName("label_d0")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_d0)

        self.direction_d0 = QtWidgets.QLineEdit(self.centralwidget)
        self.direction_d0.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.direction_d0.setObjectName("direction_d0")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.direction_d0)

        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.label_E = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.label_E.setFont(font)
        self.label_E.setObjectName("label_E")
        self.horizontalLayout.addWidget(self.label_E)

        self.estimation = QtWidgets.QLineEdit(self.centralwidget)
        self.estimation.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.estimation.setObjectName("estimation")
        self.horizontalLayout.addWidget(self.estimation)

        self.label_L = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.label_L.setFont(font)
        self.label_L.setObjectName("label_L")
        self.horizontalLayout.addWidget(self.label_L)

        self.literation = QtWidgets.QLineEdit(self.centralwidget)
        self.literation.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.literation.setObjectName("literation")
        self.horizontalLayout.addWidget(self.literation)
        self.formLayout.setLayout(2, QtWidgets.QFormLayout.SpanningRole, self.horizontalLayout)
        self.label_set_function = QtWidgets.QLabel(self.centralwidget)

        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.label_set_function.setFont(font)
        self.label_set_function.setObjectName("label_set_function")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_set_function)

        self.set_function = QtWidgets.QLineEdit(self.centralwidget)
        self.set_function.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.set_function.setObjectName("set_function")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.set_function)
        self.verticalLayout.addLayout(self.formLayout)

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(38, 70, 83);\n"
"border-color: rgb(42, 157, 143);\n"
"border-width : 4px;\n"
"border-style:inset;\n"
"color: rgb(244, 162, 97);")
        self.pushButton.setIconSize(QtCore.QSize(20, 20))
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_2.addWidget(self.pushButton)

        spacerItem1 = QtWidgets.QSpacerItem(30, 15, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_6.addLayout(self.verticalLayout)

        self.widget = MplWidget(self.centralwidget)
        self.widget.setMinimumSize(QtCore.QSize(300, 300))
        self.widget.setObjectName("widget")
        self.horizontalLayout_6.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.define_funnctionality(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Aproksymacja kwadratowa"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_start_point.setText(_translate("MainWindow", "Punkt startowy"))
        self.label_d0.setText(_translate("MainWindow", "Kierunek d0"))
        self.label_E.setText(_translate("MainWindow", "E"))
        self.label_L.setText(_translate("MainWindow", "L"))
        self.label_set_function.setText(_translate("MainWindow", "Podaj funkcje"))
        self.pushButton.setText(_translate("MainWindow", "Oblicz"))
	
    def define_funnctionality(self, MainWindow):
        self.pushButton.clicked.connect(self.on_click)

    # @pyqtSlot()
    def on_click(self):
        self.textBrowser.append(f'\nObliczam warstwice dla {self.set_function.text()}')
        xm, value_xm, result, value_result, value_start = self.widget.rysuj(self.start_point.text(), self.direction_d0.text(), self.estimation.text(), self.literation.text(), self.set_function.text())
        if value_result == None:
            self.textBrowser.append("Nie znaleziono minimum : - :")
        else:
            self.textBrowser.append(f'----------- Gotowe! -----------')
            self.textBrowser.append(f'Wartość funkcji w punkcie początkowym {value_start} dla punktu [{self.start_point.text()}]\n')
            self.textBrowser.append(f'Wektor X: {xm}')
            self.textBrowser.append(f'Wektor wartości X: {value_xm}\n')
            self.textBrowser.append(f'Otrzymana wartość minimum {value_result} w punkcie {result}')


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())